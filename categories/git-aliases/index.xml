<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git Aliases on Fullstack Developer</title>
    <link>https://guillem-gelabert.github.io/categories/git-aliases/</link>
    <description>Recent content in Git Aliases on Fullstack Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Sep 2020 08:31:35 +0200</lastBuildDate>
    
	<atom:link href="https://guillem-gelabert.github.io/categories/git-aliases/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git Rebase Interactive: Change the past</title>
      <link>https://guillem-gelabert.github.io/posts/git-rebase-interactive/</link>
      <pubDate>Sun, 06 Sep 2020 08:31:35 +0200</pubDate>
      
      <guid>https://guillem-gelabert.github.io/posts/git-rebase-interactive/</guid>
      <description>Rebase is one of the most often used commands, as a way to update your tree with all the changes that happened in master since you branched. But when used with its --interactive (-i) flag it turns into the most powerful history changing git command.</description>
    </item>
    
    <item>
      <title>Git Undo: against instant regret</title>
      <link>https://guillem-gelabert.github.io/posts/git-undo/</link>
      <pubDate>Tue, 01 Sep 2020 09:34:06 +0200</pubDate>
      
      <guid>https://guillem-gelabert.github.io/posts/git-undo/</guid>
      <description>Say you&amp;rsquo;ve amended once to add a forgotten file, once to change the message, another one to remove a console.log, and you realise you are tired and you need to focus a little bit better.</description>
    </item>
    
    <item>
      <title>You need these git aliases</title>
      <link>https://guillem-gelabert.github.io/posts/you-need-git-aliases/</link>
      <pubDate>Sun, 30 Aug 2020 09:32:21 +0200</pubDate>
      
      <guid>https://guillem-gelabert.github.io/posts/you-need-git-aliases/</guid>
      <description>Optimally we would always work in a purely linear way, after carefully planning all the code changes required to implement a certain feature. This works best if we are doing very small changes, modifying only a couple of characters or lines, if we are well acquainted with the codebase and the stack being used, or if we&amp;rsquo;re undertaking a trivial task that we can do almost mechanically.</description>
    </item>
    
  </channel>
</rss>